AWSTemplateFormatVersion: 2010-09-09

Description: The AWS CloudFormation template for creating Cloudwatch Dashboard and Alarms.

Parameters:
  ProjectName:
    Type: String
    Default: cloudwatch-pagerduty
    Description: Enter name of your project
  LambdaCodeS3BucketName:
    Type: String
    Description: S3 bucket key for lambda code zip
    Default: ignite-dms-dev-02
  LambdaCodeS3Key:
    Type: String
    Description: S3 bucket key for lambda code zip
    Default: code/efx-fico-alert-message-transformer-lambda/package-1.0.zip
  PagerDutyWebhook:
    Type: String
    Description: Pager Duty Webhook to which notifications are to be delivered
    Default: https://pagerduty-alert.com

Resources:
  PagerDutyMonitoringTopicKmsKey:
    Type: AWS::KMS::Key
    Properties: 
      Description: KMS key to encrypt messages sent to the topic
      Enabled: True
      EnableKeyRotation: False
      KeyPolicy:
        Version: 2012-10-17
        Id: !Sub ${ProjectName}-monitoring-topic-key
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Join 
                - ''
                - - 'arn:aws:iam::'
                  - !Ref 'AWS::AccountId'
                  - ':root'
            Action: kms:*
            Resource: '*'
      Tags: 
        - Key: category
          Value: goldmine
        - Key: project_name
          Value: !Ref ProjectName

  PagerDutyMonitoringTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: !Sub ${ProjectName}-monitoring-topic
      KmsMasterKeyId: !Ref  PagerDutyMonitoringTopicKmsKey
      Subscription: 
        - Endpoint: !Ref PagerDutyWebhook
          Protocol: https
      Tags: 
        - Key: category
          Value: goldmine
        - Key: project_name
          Value: !Ref ProjectName
      TopicName: !Sub ${ProjectName}-monitoring-topic

  PageDutyMonitoringEventRule:
    Type: AWS::Events::Rule
    Properties: 
      Description: Rule to intercept CloudWatch alarm events
      EventPattern:
        source: 
          - aws.cloudwatch
        detail-type: 
          - CloudWatch Alarm State Change
        detail:
          state:
            value: 
              - ALARM
      Name: !Sub ${ProjectName}-monitoring-rule
      State: ENABLED
      Targets: 
        - Arn: !GetAtt PagerDutyAlertMessageTransformerLambda.Arn
          Id: !Ref PagerDutyAlertMessageTransformerLambda
  
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref PagerDutyAlertMessageTransformerLambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt PageDutyMonitoringEventRule.Arn

  PagerDutyAlertMessageTransformerLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-lambda-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole

  PagerDutyAlertMessageTransformerLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-lambda-policy
      Roles:
        - !Ref PagerDutyAlertMessageTransformerLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
          - Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - !Ref PagerDutyMonitoringTopic
          - Effect: Allow
            Action:
              - cloudwatch:DescribeAlarms
            Resource: '*'
          - Effect: Allow
            Action:
              - kms:encrypt
              - kms:decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !GetAtt PagerDutyMonitoringTopicKmsKey.Arn

  PagerDutyAlertMessageTransformerLambda:
    DependsOn:
      - PagerDutyAlertMessageTransformerLambdaPolicy
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${ProjectName}-lambda
      Handler: index.lambda_handler
      Runtime: python3.7
      Description: Transform alert message format and publish to SNS topic
      MemorySize: 128
      Timeout: 300
      Role: !GetAtt PagerDutyAlertMessageTransformerLambdaRole.Arn
      KmsKeyArn: !GetAtt PagerDutyMonitoringTopicKmsKey.Arn
      Environment: 
        Variables:
          SNS_TOPIC_ARN: !Ref PagerDutyMonitoringTopic
      Tags:
        - Key: category
          Value: goldmine
        - Key: project_name
          Value: !Sub ${ProjectName}
      Code:
        S3Bucket: !Ref LambdaCodeS3BucketName
        S3Key: !Ref LambdaCodeS3Key

Outputs:
  OutPagerDutyAlertMessageTransformerLambdaArn:
    Description: Pager Duty Alert Message Transformer Lambda ARN
    Value: !GetAtt PagerDutyAlertMessageTransformerLambda.Arn
    Export:
      Name: PagerDutyAlertMessageTransformerLambdaArn

  OutPagerDutyAlertMessageTransformerLambdaRoleArn:
    Description: Pager Duty Alert Message Transformer Lambda Role ARN
    Value: !GetAtt PagerDutyAlertMessageTransformerLambdaRole.Arn
    Export:
      Name: PagerDutyAlertMessageTransformerLambdaRoleArn
